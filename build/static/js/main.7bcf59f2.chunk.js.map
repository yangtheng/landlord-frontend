{"version":3,"sources":["serviceWorker.js","redux/modules/roomInfo.js","redux/modules/rooms.js","redux/modules/game.js","redux/modules/reducer.js","redux/store.js","components/ScrollToTop.js","socket.js","pages/Home/Home.js","containers/HomeContainer/index.js","pages/Room/index.js","containers/RoomContainer/index.js","components/PlayerInfo/index.js","util.js","components/CardsOnBoard/index.js","components/Leaderboard/index.js","components/MyCards/index.js","checkCards.js","hooks/usePrevious.js","pages/Game/index.js","containers/GameContainer/index.js","routes.js","pages/App/App.js","containers/AppContainer/index.js","index.js"],"names":["Boolean","window","location","hostname","match","defaultState","roomId","users","user","rooms","myCards","activePlayer","currentBid","playersBidded","playerLastBid","playerNum","isBidding","landlord","numOfCards","leftovers","cardsOnBoard","leaderBoard","endGame","types","sort","cards","a","b","suit","type","indexOf","combineReducers","roomInfo","state","action","game","bid","map","num","i","length","bomb","score","winningPlayer","bet","middleware","thunkMiddleware","createStore","reducers","applyMiddleware","ScrollToTop","prevProps","this","props","scrollTo","children","Component","withRouter","socket","io","Home","userJoin","useState","userName","setUserName","className","value","onChange","e","target","placeholder","onClick","emit","to","room","key","HomeContainer","connect","dispatch","reqUserJoin","Room","userLeave","socketId","RoomContainer","PlayerInfo","displayedPlayer","src","alt","isMobile","ua","navigator","userAgent","vendor","opera","test","substr","CardsOnBoard","cardWidth","cardGap","style","width","image","left","Leaderboard","prevLeaderboard","leaderboardSorted","oldScore","difference","winner","color","MyCards","activeCards","setActiveCard","includes","3","4","5","6","7","8","9","2","straight","isJokerBomb","nums","reduce","acc","cur","isStraight","sortedNums","index","undefined","group","counts","count","groupByCount","Object","keys","push","getFormat","input","v","groups","flag","bombs","countsGroups","maxGroup","Math","max","anotherGroup","min","floor","maxCard","valid","format","beat","oldCards","newCards","newFormat","oldFormat","oldMaxCard","console","log","Game","playCards","setActiveCards","setCardTypes","ref","useRef","useEffect","current","usePrevious","getPrevPlayerCards","getActiveCards","filter","card","include","forEach","amount","Array","fill","el","height","top","remainingCards","GameContainer","Routes","path","exact","component","App","history","on","AppContainer","ReactDOM","render","store","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7bcf59f2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import io from \"socket.io-client\";\n// const ENDPOINT = 'localhost:3001';\n\nconst REC_CREATOR_JOIN = 'roomInfo/REC_CREATOR_JOIN';\nconst REQ_USER_JOIN = 'roomInfo/REQ_USER_JOIN';\nconst REC_USER_JOIN = 'roomInfo/REC_USER_JOIN';\nconst REQ_USER_LEAVE = 'roomInfo/REQ_USER_LEAVE';\nconst REC_USER_LEAVE = 'roomInfo/REC_USER_LEAVE';\n\n// let socket = io(ENDPOINT);\n\nconst defaultState = {\n  roomId: '',\n  users: [],\n  user: '',\n};\n\n// Reducer\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case REQ_USER_JOIN:\n      return {\n        ...state,\n        roomId: action.roomId,\n        user: action.user,\n      }\n    case REQ_USER_LEAVE:\n      return defaultState;\n    case REC_USER_JOIN:\n    case REC_USER_LEAVE:\n      return {\n        ...state,\n        ...{\n          users: action.users,\n        },\n      };\n    case REC_CREATOR_JOIN:\n      return {\n        roomId: action.roomId,\n        users: action.users,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\n\n// export action creators\nexport const recCreatorJoin = (roomId, user, users) => ({\n  type: REC_CREATOR_JOIN,\n  roomId,\n  user,\n  users,\n});\n\nconst reqUserJoin = (user, roomId) => ({\n  type: REQ_USER_JOIN,\n  user,\n  roomId,\n});\n\nexport const recUserJoin = users => ({\n  type: REC_USER_JOIN,\n  users,\n});\n\nconst reqUserLeave = () => ({\n  type: REQ_USER_LEAVE,\n});\n\nexport const recUserLeave = users => ({\n  type: REC_USER_LEAVE,\n  users,\n});\n\nexport const userJoin = (user, roomId) => {\n  return dispatch => {\n    dispatch(reqUserJoin(user, roomId));\n  }\n}\n\nexport const userLeave = () => {\n  return dispatch => {\n    dispatch(reqUserLeave());\n  };\n}\n","const REC_GET_ROOMS = 'roomInfo/REC_GET_ROOMS';\n\nconst defaultState = {\n  rooms: [],\n};\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case REC_GET_ROOMS:\n      return {\n        rooms: action.rooms,\n      };\n    default:\n      return state;\n  }\n};\n","const REC_START_GAME = 'game/REC_START_GAME';\nconst REC_BID = 'game/REC_BID';\nconst REC_BID_END = 'game/REC_BID_END';\nconst REQ_PLAY_CARDS = 'game/REQ_PLAY_CARDS';\nconst REC_PLAY_CARDS = 'game/REC_PLAY_CARDS';\nconst REC_END_GAME = 'game/REC_END_GAME';\n\nconst defaultState = {\n  myCards: [],\n  activePlayer: null,\n  currentBid: 0,\n  playersBidded: 0,\n  playerLastBid: null,\n  playerNum: null,\n  isBidding: true,\n  landlord: null,\n  numOfCards: [17, 17, 17],\n  leftovers: [],\n  cardsOnBoard: [[], [], []],\n  leaderBoard:[0, 0, 0],\n  endGame: false,\n};\n\nconst types = ['3','4','5','6','7','8','9','T','J','Q','K','A','2'];\n\nconst sort = (cards, types) => {\n  cards.sort((a, b) => {\n    if (a.suit === 'red' && b.suit === 'black') return 1;\n    if (a.suit === 'black' && b.suit === 'red') return -1;\n    if (a.type === 'Joker') return 1;\n    if (b.type === 'Joker') return -1;\n    if (a.type === b.type) return 0;\n    if (types.indexOf(a.type) > types.indexOf(b.type)) return 1;\n    if (types.indexOf(a.type) < types.indexOf(b.type)) return -1;\n  })\n  return cards;\n}\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case REC_START_GAME:\n      return {\n        ...defaultState,\n        leaderBoard: state.leaderBoard,\n        myCards: action.myCards,\n        activePlayer: action.activePlayer,\n        playerNum: action.playerNum,\n        endGame: false,\n      };\n    case REC_BID:\n      return {\n        ...state,\n        ...action.bid && { currentBid: action.bid },\n        activePlayer: action.activePlayer,\n        playersBidded: action.playersBidded,\n        ...action.playerLastBid !== null && { playerLastBid: action.playerLastBid },\n      };\n    case REC_BID_END:\n      return {\n        ...state,\n        landlord: action.landlord,\n        numOfCards: state.numOfCards.map((num, i) => {\n          if (i === action.landlord) return num + 3;\n          return num;\n        }),\n        activePlayer: action.landlord,\n        leftovers: action.leftovers,\n        isBidding: false,\n        ...state.playerNum === action.landlord && {\n          myCards: sort(\n            [\n              ...state.myCards,\n              ...action.leftovers,\n            ],\n            types,\n          ),\n        },\n      }\n      case REQ_PLAY_CARDS:\n        return {\n          ...state,\n          myCards: action.cards,\n        }\n      case REC_PLAY_CARDS:\n        return {\n          ...state,\n          activePlayer: (action.playerNum + 1) % 3,\n          numOfCards: state.numOfCards.map((num, i) => {\n            return i === action.playerNum ? num - action.cards.length : num;\n          }),\n          cardsOnBoard: state.cardsOnBoard.map((cards, i) => {\n            if (i === action.playerNum) return action.cards;\n            if (i === (action.playerNum + 1) % 3) return [];\n            return cards;\n          }),\n          ...action.bomb && {\n            currentBid: state.currentBid * action.bomb * 2,\n          },\n        }\n      case REC_END_GAME:\n        return {\n          ...state,\n          endGame: true,\n          activePlayer: null,\n          leaderBoard: state.leaderBoard.map((score, i) => {\n            if (i === state.landlord) {\n              if (i === action.winningPlayer) return score + action.bet * 2;\n              return score - action.bet * 2\n            } else {\n              if (state.landlord !== action.winningPlayer) return score + action.bet;\n              return score - action.bet\n            }\n          })\n        }\n    default:\n      return state;\n  }\n};\n\nexport const playCards = cards => ({\n  type: REQ_PLAY_CARDS,\n  cards,\n});\n","import { combineReducers } from 'redux';\nimport roomInfo from './roomInfo';\nimport rooms from './rooms';\nimport game from './game';\n\nexport default combineReducers({\n  roomInfo,\n  rooms,\n  game,\n});\n","import thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './modules/reducer';\n\nlet loggerMiddleware;\nif (process.env.NODE_ENV !== 'production') loggerMiddleware = createLogger();\n\nlet middleware = [thunkMiddleware];\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware = [...middleware, loggerMiddleware];\n}\n\nexport default createStore(\n  reducers,\n  applyMiddleware(\n    ...middleware,\n  ),\n);\n","import { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    const { location } = this.props;\n    if (\n      location !== prevProps.location\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render () {\n    const { children } = this.props;\n    return children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import io from \"socket.io-client\";\n\nconst ENDPOINT = '54.85.245.18:5000' || 'localhost:5000';\n\nexport const socket = io(ENDPOINT);\n","import React, { useEffect, useState } from 'react';\nimport { socket } from '../../socket';\nimport { NavLink } from 'react-router-dom';\n\nimport './Home.scss';\n\n\nconst Home = ({ userJoin, rooms }) => {\n  const [userName, setUserName] = useState('');\n\n  return (\n    <div className=\"home\">\n      {!!userName || <p>Please input your name before creating/joining a room</p>}\n      <label>Your Name:</label>\n      <input\n        type=\"text\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n        placeholder=\"input name\"\n      />\n      {userName ?\n        <NavLink\n          onClick={() => socket.emit('createRoom', userName)}\n          to=\"/room\"\n        >\n          <button>\n            create room\n          </button>\n        </NavLink>\n      :\n        <button>\n          create room\n        </button>\n      }\n      <p>All Rooms</p>\n      <ul>\n        {rooms.map(room => (\n          <li key={room.roomId}>\n            <span className=\"room-list-room-id\">{room.roomId}</span>\n            <span className=\"room-list-room-size\">{room.users.length} / 3</span>\n            {userName ?\n              <NavLink\n                onClick={() => {\n                  userJoin(userName, room.roomId);\n                  socket.emit('joinRoom', {\n                    user: userName,\n                    roomId: room.roomId,\n                  });\n                }}\n                to=\"/room\"\n              >\n                <button>\n                  join room\n                </button>\n              </NavLink>\n            :\n              <button>\n                join room\n              </button>\n            }\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Home;\n","import { connect } from 'react-redux';\n\nimport Home from '../../pages/Home/Home';\nimport { userJoin } from '../../redux/modules/roomInfo';\n\nconst HomeContainer = connect(\n  state => ({\n    rooms: state.rooms.rooms,\n  }),\n  { userJoin },\n)(Home);\n\nexport default HomeContainer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { socket } from '../../socket';\n\nconst Room = ({\n  roomId,\n  users,\n  user,\n  userLeave,\n}) => {\n  return (\n    <div className=\"room-window\">\n      <p>Welcome {user} to room {roomId}</p>\n      <strong>Users</strong>\n      <ol type=\"1\">\n        {users.map(user => (\n          <li key={user.socketId}>{user.user}</li>\n        ))}\n      </ol>\n      <NavLink\n        onClick={() => {\n          socket.emit('leaveRoom', roomId);\n          userLeave();\n        }}\n        to=\"/\"\n      >\n        <button>\n          leave room\n        </button>\n      </NavLink>\n      {users.length === 3 && <NavLink\n        onClick={() => {\n          socket.emit('startGame', { users, roomId });\n        }}\n        to=\"/game\"\n      >\n        <button>\n          start game\n        </button>\n      </NavLink>}\n    </div>\n  );\n};\n\nexport default Room;\n","import { connect } from 'react-redux';\n\nimport Room from '../../pages/Room';\nimport { userLeave } from '../../redux/modules/roomInfo';\n\nconst RoomContainer = connect(\n  state => ({\n    roomId: state.roomInfo.roomId,\n    users: state.roomInfo.users,\n    user: state.roomInfo.user,\n  }),\n  { userLeave },\n)(Room);\n\nexport default RoomContainer;\n","import React from 'react';\n\nconst PlayerInfo = ({\n  className,\n  playerNum,\n  users,\n  numOfCards,\n  landlord,\n  displayedPlayer,\n  activePlayer,\n  leaderBoard,\n}) => (\n  <div className={`${className}${displayedPlayer === activePlayer ? ' active' : ''}`}>\n    <p>{playerNum !== null && users[displayedPlayer].user}</p>\n    <p>\n      <img className=\"num-cards-indicator\" src=\"images/back.svg\" alt=\"card-back\" />\n      {numOfCards[displayedPlayer]}\n    </p>\n    <p>${leaderBoard[displayedPlayer]}</p>\n    {landlord !== null && landlord === displayedPlayer && <div className=\"landlord-indicator\">landlord</div>}\n  </div>\n);\n\nexport default PlayerInfo;\n","export const isMobile = () => {\n  const ua = navigator.userAgent || navigator.vendor || window.opera\n  return (\n    /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n      ua\n    ) ||\n    /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n      ua.substr(0, 4)\n    )\n  )\n}\n","import React from 'react';\nimport { isMobile } from '../../util';\n\nconst CardsOnBoard = ({\n  className,\n  cards,\n}) => {\n  const cardWidth = isMobile() ? 42.69 : 80;\n  const cardGap = isMobile() ? 20 : 64;\n  return (\n    <div className={className} style={{ width: `${cards.length * cardWidth - (cards.length - 1) * cardGap}px`}}>\n      {cards.map(({ image, type }, i) => (\n        <img\n          key={image}\n          style={{\n            left: `${0 - cardGap * i}px`,\n          }}\n          src={image}\n          alt={type}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CardsOnBoard;\n","import React from 'react';\nimport { socket } from '../../socket';\n\nconst Leaderboard = ({\n  leaderBoard,\n  prevLeaderboard,\n  users,\n}) => {\n  const usersAndScores = leaderBoard.map((score, i) => ({\n    score,\n    user: users[i],\n    oldScore: prevLeaderboard[i],\n    difference: score - prevLeaderboard[i],\n    winner: score - prevLeaderboard[i] > 0,\n  }));\n  const leaderboardSorted = usersAndScores.sort((a, b) => b.score - a.score)\n  return (\n    <div className=\"leaderboard\">\n      <h1>Leaderboard</h1>\n      {leaderboardSorted.map(({ score, user, oldScore, difference, winner }, i) => (\n        <div key={i} className=\"user-score\">\n          <span>\n            {user.user}\n          </span>\n          <span>\n            ${score}\n            <span style={{ color: difference > 0 ? 'green' : 'red'}}>({difference > 0 ? `+${difference}` : difference})</span>\n          </span>\n        </div>\n      ))}\n    </div>\n  )\n};\n\nexport default Leaderboard;\n","import React from 'react';\nimport { isMobile } from '../../util';\n\nconst MyCards = ({\n  myCards,\n  activeCards,\n  setActiveCard,\n}) => {\n  const cardWidth = isMobile() ? 58.34 : 110;\n  const cardGap = isMobile() ? 35 : 83;\n  return (\n    <div className=\"my-cards\" style={{ width: `${myCards.length * cardWidth - (myCards.length - 1) * cardGap}px`}}>\n      {myCards.map(({ image, type }, i) => (\n        <img\n          key={image}\n          className={activeCards.includes(i) ? 'selected' : ''}\n          onClick={() => setActiveCard(i)}\n          style={{ left: `${0 - cardGap * i}px` }}\n          src={image}\n          alt={type}\n        />\n      ))}\n    </div>\n  )\n};\n\nexport default MyCards;\n","const cards = {\n    3: {\n        value: 1\n    },\n    4: {\n        value: 2\n    },\n    5: {\n        value: 3\n    },\n    6: {\n        value: 4\n    },\n    7: {\n        value: 5\n    },\n    8: {\n        value: 6\n    },\n    9: {\n        value: 7\n    },\n    'T': {\n        value: 8\n    },\n    'J': {\n        value: 9\n    },\n    'Q': {\n        value: 10\n    },\n    'K': {\n        value: 11\n    },\n    'A': {\n        value: 12\n    },\n    2: {\n        straight: false,\n        value: 13\n    },\n    'Jokerblack': {\n        straight: false,\n        value: 14\n    },\n    'Jokerred': {\n        straight: false,\n        value: 15\n    }\n}\n\nconst isJokerBomb = (nums) => {\n    if (!nums) return false;\n    if(nums.length === 2 && nums.reduce((acc,cur) => {\n        return acc + cur.value;\n    },0) === 29) return true;\n    return false;\n}\n\nconst isStraight = (nums) => {\n    if (!nums) return false;\n    if (nums.length === 1) return true;\n    // sort first\n    const sortedNums = nums.sort((a, b) => {\n        return a.value - b.value;\n    });\n\n    for (let index = 0; index < sortedNums.length; index++) {\n        const num = sortedNums[index];\n        if (typeof (num.straight) != undefined && num.straight === false){\n          return false;\n        }\n        else if (index !== sortedNums.length - 1 && (sortedNums[index + 1].value - num.value !== 1)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nconst group = (nums) => {\n    const counts = nums.reduce(function (acc, cur) {\n        (acc[cur.value] = acc[cur.value] || { ...cur, count: 0 }).count += 1;\n        return acc;\n    }, {});\n    const groupByCount = {};\n    for (const key of Object.keys(counts)) {\n        (groupByCount[counts[key].count] = groupByCount[counts[key].count] || []).push(counts[key]);\n    }\n    return groupByCount;\n}\n\nconst getFormat = (input = []) => {\n    const nums = input.map(v => cards[`${v.type}${v.suit}`] || cards[v.type]);\n    const groups = group(nums);\n    let flag = true;\n    let bombs = 0;\n    const countsGroups = Object.keys(groups);\n    // should at most have 2 card patterns only\n    if (countsGroups.length > 2) {\n        flag = false;\n    }\n\n    const maxGroup = Math.max(...countsGroups);\n    const anotherGroup = Math.min(...countsGroups);\n    if (countsGroups.length === 1) {\n        if(isJokerBomb(groups[maxGroup])){\n            bombs = 1;\n        }else if(!isStraight(groups[maxGroup])){\n            // must be straight\n            flag = false;\n        }else if( (maxGroup === 2 && groups[maxGroup].length === 2) || (maxGroup === 1 && groups[maxGroup].length <5 && groups[maxGroup].length !== 1)){\n            // cannot be 2 paris\n            // cannot be straight that less than 5 cards\n            flag = false;\n        }\n        if(maxGroup == 4) bombs = groups[maxGroup].length;\n    } else {\n      // console.log(anotherGroup);\n      // console.log(groups[anotherGroup], groups[maxGroup]);\n      // console.log(Math.floor(maxGroup/4) + 1);\n      // console.log(\"======\");\n      // console.log(groups[anotherGroup].length);\n      // console.log(groups[maxGroup].length);\n      // console.log(groups[maxGroup].length * Math.floor(maxGroup/4) + 1);\n      // console.log(![groups[anotherGroup].length].includes(groups[maxGroup].length * Math.floor(maxGroup/4) + 1));\n        if (!isStraight(groups[maxGroup]) || ![3, 4].includes(maxGroup)) {\n            flag = false;\n        } else if (!(anotherGroup <= 2 && [groups[anotherGroup].length,anotherGroup ===2 ? groups[anotherGroup].length*2 : -1].includes(groups[maxGroup].length * (Math.floor(maxGroup/4) + 1)))) {\n            flag = false;\n        }\n    }\n\n    const maxCard = groups[maxGroup] ? groups[maxGroup].reduce((acc, cur) => {\n        if (cur.value > acc) return cur.value;\n        return acc;\n    }, 0) : 0;\n\n    return {\n        valid: flag,\n        format: groups,\n        maxCard,\n        bombs\n    };\n}\n\nexport const beat = (oldCards, newCards) => {\n    const {format: newFormat, bombs,valid,maxCard} = getFormat(newCards);\n    if(!valid){\n        return false;\n    }\n    if (!oldCards.length && valid){\n      return {\n        bombs\n      }\n    }\n    const {format: oldFormat, maxCard: oldMaxCard} = getFormat(oldCards);\n    if(bombs === 0){\n        if(Object.keys(newFormat).length !== Object.keys(oldFormat).length) return false;\n        for(const key of Object.keys(newFormat)){\n            if(!oldFormat[key] || oldFormat[key].length != newFormat[key].length) return false;\n        }\n    }\n    // console.log(maxCard, oldMaxCard);\n    if(maxCard <= oldMaxCard) return false;\n    return {\n        bombs\n    }\n}\n\nconsole.log(beat(\n[\n\n],\n[\n  {\n    type: 'A',\n    suit: 'black'\n  },\n  // {\n  //   type: 'Q',\n  //   suit: 'black'\n  // },\n  // {\n  //   type: 'Q',\n  //   suit: 'black'\n  // },\n  {\n    type: '2',\n    suit: 'black'\n  },\n  // {\n  //   type: 'J',\n  //   suit: 'black'\n  // },\n  // {\n  //   type: 'J',\n  //   suit: 'black'\n  // },\n  {\n    type: '8',\n    suit: 'black'\n  },\n  {\n    type: '8',\n    suit: 'black'\n  },\n  {\n    type: '8',\n    suit: 'black'\n  },\n  {\n    type: '8',\n    suit: 'black'\n  },\n]));\n","import { useEffect, useRef } from 'react';\n\nexport default (value) => {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n","import React, { useState, useEffect } from 'react';\nimport { socket } from '../../socket';\nimport PlayerInfo from '../../components/PlayerInfo';\nimport CardsOnBoard from '../../components/CardsOnBoard';\nimport Leaderboard from '../../components/Leaderboard';\nimport MyCards from '../../components/MyCards';\nimport { beat } from '../../checkCards';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport './styles.scss';\n\nconst Game = (props) => {\n  const {\n    myCards,\n    activePlayer,\n    currentBid,\n    playersBidded,\n    playerLastBid,\n    playerNum,\n    isBidding,\n    landlord,\n    numOfCards,\n    leftovers,\n    cardsOnBoard,\n    leaderBoard,\n    endGame,\n    users,\n    roomId,\n    playCards,\n  } = props;\n  const [activeCards, setActiveCards] = useState([]);\n  const [cardTypes, setCardTypes] = useState([]);\n\n  const prevLeaderboard = usePrevious(leaderBoard);\n\n  const getPrevPlayerCards = (cards) => (cards[(playerNum + 2) % 3].length && cards[(playerNum + 2) % 3]) || (cards[(playerNum + 1) % 3].length && cards[(playerNum + 1) % 3]) || [];\n\n  const getActiveCards = (cards) => {\n    return cards.filter((card, i) => {\n      let include = false;\n      activeCards.forEach(index => {\n        if (index === i) include = true;\n      })\n      return include;\n    })\n  }\n\n  const setActiveCard = index => {\n    if (activeCards.includes(index)) {\n      setActiveCards(activeCards.filter(i => i !== index));\n    } else {\n      setActiveCards([\n        ...activeCards,\n        index,\n      ]);\n    }\n  };\n\n  const noCardsOnBoard = (cards) => !cards.filter(el => el.length > 0).length;\n\n  const isBomb = cards => {\n    if (cards.length === 4) {\n      return cards.every(card => card.type === cards[0].type)\n    } else if (cards.length === 2) {\n      return cards.every(card => card.type === 'Joker')\n    } else return false;\n  }\n\n  const bid = (amount) => {\n    socket.emit('reduxActionSent', {\n      type: 'game/REC_BID',\n      bid: amount ? amount : null,\n      activePlayer: (amount === 3 || playersBidded === 2) ? playerNum : (playerNum + 1) % 3,\n      playersBidded: playersBidded + 1,\n      playerLastBid: amount ? playerNum : null,\n      roomId,\n    })\n\n    if (amount === 3 || playersBidded === 2) {\n      socket.emit('bidEnd', {\n        landlord: amount ? playerNum : playerLastBid,\n        roomId,\n      })\n    }\n  }\n\n  useEffect(() => {\n    setCardTypes(activeCards.map((index) => {\n      return myCards[index].type;\n    }))\n  }, [activeCards]);\n\n  return (\n    <div className=\"game-window\">\n      <div className=\"logo-wrapper\">\n        <span>斗地主</span>\n      </div>\n      {endGame && <Leaderboard {...props} prevLeaderboard={prevLeaderboard} />}\n      <MyCards {...props} activeCards={activeCards} setActiveCard={setActiveCard} />\n      <div className=\"leftovers\">\n        {leftovers.length ? leftovers.map(({image, type}) => (\n          <img\n            key={image}\n            src={image}\n            alt={type}\n          />\n        )) : new Array(3).fill().map((el, i) => (\n          <img\n            key={i}\n            src=\"images/back.svg\"\n            alt=\"card-back\"\n          />\n        ))}\n      </div>\n      <div className=\"current-bid\">\n        Current Bid: {currentBid}\n      </div>\n      <PlayerInfo className=\"player-info\" {...props} displayedPlayer={playerNum} />\n      <PlayerInfo className=\"player-info left\" {...props} displayedPlayer={(playerNum + 1) % 3} />\n      <PlayerInfo className=\"player-info right\" {...props} displayedPlayer={(playerNum + 2) % 3} />\n      <CardsOnBoard className=\"cards-on-board\" cards={cardsOnBoard[playerNum] || []} />\n      <CardsOnBoard className=\"cards-on-board left\" cards={cardsOnBoard[(playerNum + 1) % 3] || []} />\n      <CardsOnBoard className=\"cards-on-board right\" cards={cardsOnBoard[(playerNum + 2) % 3] || []} />\n      <div\n        className=\"opp-cards left\"\n        style={{ height: `${numOfCards[(playerNum + 1) % 3] * 160.23 - (numOfCards[(playerNum + 1) % 3] - 1) * 150}px`}}\n      >\n        {new Array(numOfCards[(playerNum + 1) % 3]).fill().map((el, i) => (\n          <img\n            key={i}\n            style={{ top: `${0 - 150 * i}px` }}\n            src=\"images/back.svg\"\n            alt=\"card-back\"\n          />\n        ))}\n      </div>\n      <div\n        className=\"opp-cards right\"\n        style={{ height: `${numOfCards[(playerNum + 2) % 3] * 160.23 - (numOfCards[(playerNum + 2) % 3] - 1) * 150}px`}}\n      >\n        {new Array(numOfCards[(playerNum + 2) % 3]).fill().map((el, i) => (\n          <img\n            key={i}\n            style={{ top: `${0 - 150 * i}px` }}\n            src=\"images/back.svg\"\n            alt=\"card-back\"\n          />\n        ))}\n      </div>\n      {(playerNum === activePlayer || endGame) && <div className=\"game-buttons\">\n          {endGame ?\n            <button onClick={() => {\n              socket.emit('startGame', { users, roomId });\n            }}>New Game</button>\n          :\n            isBidding ?\n              <>\n                <button onClick={() => bid()}>Pass</button>\n                {currentBid < 1 && <button onClick={() => bid(1)}>Bid 1</button>}\n                {currentBid < 2 && <button onClick={() => bid(2)}>Bid 2</button>}\n                <button onClick={() => bid(3)}>Bid 3</button>\n              </>\n            :\n              <>\n                <button onClick={() => setActiveCards([])}>Clear</button>\n                {beat(\n                  getPrevPlayerCards(cardsOnBoard),\n                  getActiveCards(myCards),\n                ) && <button onClick={() => {\n                  const remainingCards = myCards.filter((card , i) => {\n                    let include = true;\n                    activeCards.forEach(index => {\n                      if (index === i) include = false;\n                    })\n                    return include;\n                  })\n\n                  playCards(remainingCards);\n\n                  socket.emit('reduxActionSent', {\n                    type: 'game/REC_PLAY_CARDS',\n                    playerNum,\n                    cards: getActiveCards(myCards),\n                    bomb: beat(\n                      getPrevPlayerCards(cardsOnBoard),\n                      getActiveCards(myCards),\n                    ).bomb,\n                    roomId,\n                  })\n\n                  if (!remainingCards.length) {\n                    socket.emit('reduxActionSent', {\n                      type: 'game/REC_END_GAME',\n                      winningPlayer: playerNum,\n                      bet: currentBid,\n                      roomId,\n                    })\n                  }\n\n                  setActiveCards([]);\n                }}>Submit</button>}\n                {!noCardsOnBoard(cardsOnBoard) && <button onClick={() => {\n                  socket.emit('reduxActionSent', {\n                    type: 'game/REC_PLAY_CARDS',\n                    playerNum,\n                    cards: [],\n                    roomId,\n                  })\n\n                  setActiveCards([]);\n                }}>Pass</button>}\n              </>\n          }\n      </div>}\n    </div>\n  );\n};\n\nexport default Game;\n","import { connect } from 'react-redux';\n\nimport Game from '../../pages/Game';\n\nimport { playCards } from '../../redux/modules/game';\n\nconst GameContainer = connect(\n  state => ({\n    myCards: state.game.myCards,\n    activePlayer: state.game.activePlayer,\n    currentBid: state.game.currentBid,\n    playersBidded: state.game.playersBidded,\n    playerLastBid: state.game.playerLastBid,\n    playerNum: state.game.playerNum,\n    isBidding: state.game.isBidding,\n    landlord: state.game.landlord,\n    numOfCards: state.game.numOfCards,\n    leftovers: state.game.leftovers,\n    cardsOnBoard: state.game.cardsOnBoard,\n    leaderBoard: state.game.leaderBoard,\n    endGame: state.game.endGame,\n    users: state.roomInfo.users,\n    roomId: state.roomInfo.roomId,\n  }),\n  { playCards },\n)(Game);\n\nexport default GameContainer;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n// import {\n//   HomeContainer,\n// } from './containers';\nimport HomeContainer from './containers/HomeContainer';\nimport RoomContainer from './containers/RoomContainer';\nimport GameContainer from './containers/GameContainer';\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={HomeContainer} />\n    <Route path=\"/room\" component={RoomContainer} />\n    <Route path=\"/game\" component={GameContainer} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { useEffect } from 'react';\nimport { socket } from '../../socket';\nimport Routes from '../../routes';\nimport './App.scss';\n\nconst App = ({ dispatch, user, room, history }) => {\n  useEffect(() => {\n    socket.on('reduxActionReceived', action => {\n      if (action.type === 'game/REC_START_GAME') {\n        history.push('/game');\n      }\n\n      dispatch(action);\n    })\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport App from '../../pages/App/App';\n\nconst AppContainer = connect(null)(App);\n\nexport default withRouter(AppContainer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\nimport { ScrollToTop } from './components';\nimport AppContainer from './containers/AppContainer';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <ScrollToTop>\n        <AppContainer />\n      </ScrollToTop>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}